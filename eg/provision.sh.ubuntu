#!/bin/bash

ADMIN=${ADMIN:-obuk}
ADMINS="${ADMINS:-adm,vagrant}"
WORK=/vagrant/work

apt-upgrade () {
    export DEBIAN_FRONTEND=noninteractive
    #sudo dpkg --configure -a
    local force_yes="
    	  --allow-unauthenticated
	  --allow-downgrades
	  --allow-remove-essential
	  --allow-change-held-packages"
    if sudo apt-get update; then
	echo '*** apt-get upgrade' >&2
	if sudo -E apt-get -o Dpkg::Options::="--force-confold" \
		upgrade -q -y $force_yes; then
	    echo '*** apt-get dist-upgrade' >&2
	    sudo -E apt-get -o Dpkg::Options::="--force-confold" \
		 dist-upgrade -q -y $force_yes
	fi
    fi
}

setup-auth() {
    realm=$(dig +short txt _kerberos.$(hostname -d))
    echo krb5-config krb5-config/default_realm string $realm | \
	sudo debconf-set-selections
    sudo apt-get -y install krb5-user libpam-krb5
}

setup-admin () {
    ADDUSER="--home /home/$ADMIN --disabled-password --gecos '' --quiet"
    # adduser as admin
    if ! id $ADMIN 2>/dev/null; then
	sudo adduser $ADDUSER $ADMIN
    fi
    if [ -n "$ADMINS" ]; then
	sudo usermod -aG "$(echo $ADMINS | tr ' ' ',')" $ADMIN
    fi

    # sudo
    TEMP=$(mktemp)
    cat > $TEMP <<EOF
$ADMIN ALL=(ALL) NOPASSWD: ALL
Defaults:$ADMIN !requiretty
EOF
    sudo install -m 440 $TEMP /etc/sudoers.d/$ADMIN
    rm -f $TEMP

    # ssh
    sudo -u $ADMIN mkdir -m 700 -p /home/$ADMIN/.ssh
    sudo install -m 600 -o $ADMIN \
	 /home/vagrant/.ssh/authorized_keys \
	 /home/$ADMIN/.ssh/
    sudo install -m 400 -o $ADMIN \
	 /vagrant/.vagrant/machines/default/virtualbox/private_key \
	 /home/$ADMIN/.ssh/id_rsa
    TEMP=$(mktemp)
    cat > $TEMP <<EOF
Host *
  GSSAPIAuthentication yes
  GSSAPIDelegateCredentials yes
  UserKnownHostsFile /dev/null
  StrictHostKeyChecking no
  LogLevel FATAL
  IPQoS 0x00
EOF
    sudo install -m 440 -o $ADMIN $TEMP /home/$ADMIN/.ssh/config
    rm -f $TEMP
}

setup-grub-pc() {
    disk=${1:-/dev/sda}
    echo grub-pc grub-pc/install_devices multiselect $disk | \
	sudo debconf-set-selections
    echo grub-pc grub-pc/install_devices_disks_changed multiselect $disk | \
	sudo debconf-set-selections
    #sudo debconf-show grub-pc
    #sudo debconf-get-selections | grep grub-pc
    #sudo dpkg-reconfigure grub-pc
}


sudo timedatectl set-timezone Asia/Tokyo

apt-upgrade

sudo apt-get -y install debconf-utils

setup-auth
setup-admin

setup-grub-pc
sudo apt-get -y install grub-pc

sudo apt-get -y install ubuntu-desktop
#sudo apt-get -y install ubuntu-defaults-ja
[ "$(. /etc/default/keyboard; echo $XKBOPTIONS)" == "ctrl:nocaps" ] ||
    echo 'XKBOPTIONS="ctrl:nocaps"' |sudo tee -a /etc/default/keyboard

sudo locale-gen ja_JP.utf8
sudo apt-get -y install groff manpages manpages-ja

setup-grops-ja-takao () {
    sudo -u vagrant env WORK=$WORK $WORK/eg/setup-grops-ja-ubuntu.sh
    # install grops-pp for justification
    sudo install $WORK/grops-pp.pl /usr/local/bin
    (grep -v ^prepro /usr/share/groff/current/font/devps/DESC
     echo prepro grops-pp.pl) >DESC
    sudo install -m644 DESC /usr/share/groff/current/font/devps/
    sudo install -m644 $WORK/line-gap.patch /etc/groff
}

setup-gropdf-ubuntu () {
    sudo -u vagrant env WORK=$WORK $WORK/eg/setup-gropdf-ubuntu.sh
}

install-groff-current ()
{
    sudo apt-get -y install autoconf libtool texinfo bison pkgconf \
	 libuchardet-dev libxaw7-dev

    git clone https://git.savannah.gnu.org/git/groff.git

    (
	cd groff
	./bootstrap
	./configure --prefix=/usr/local
	make
	sudo make install
    )

    local GROFF_FONT=/usr/share/groff/current/font
    local GROFF_LOCAL_FONT=${GROFF_FONT/usr/usr\/local}
    for dev in devps devpdf; do
	sudo cp $GROFF_FONT/$dev/DESC $GROFF_LOCAL_FONT/$dev
    done

    # Save site setup by sharing site-font and site-tmac:
    # GROFF_TMAC_PATH=/etc/groff
    # GROFF_FONT_PATH=/usr/share/groff/site-font

    # To run groff package installed with apt-get:
    # GROFF_BIN_PATH=/usr/bin

    # examples outputs pdf:
    # zcat /usr/share/man/ja/man7/groff.7.gz | groff -Tpdf -mja -man -Dutf8
    # pdfmom mom-pdf.mom

    # Use gs to embed fonts:
    # | gs -sDEVICE=pdfwrite -dPrinted=false -dNOPAUSE -dQUIET -dBATCH -sOutputFile=- - 
}


[ -d $WORK ] || git clone https://github.com/obuk/use-groff $WORK

setup-grops-ja-takao	# with fonts-takao, and generate I B BI fonts
setup-gropdf-ubuntu

# install-groff-current

[ -f /var/run/reboot-required ] && echo -n "vagrant reload; " >&2
echo "vagrant ssh -- -Y" >&2
#echo "vagrant ssh -- -Y -l $ADMIN" >&2
echo "and run: zcat `man -L ja -w 7 groff` | groff -Tpdf -mja -man -Dutf8 >/vagrant/a.pdf" >&2
